Terminals unused in grammar

   ELSE
   FI
   IF
   IN
   LET
   LOOP
   POOL
   THEN
   WHILE
   CASE
   ESAC
   OF
   DARROW
   NEW
   ISVOID
   BOOL_CONST
   NOT
   LE
   ERROR


State 10 conflicts: 1 shift/reduce
State 16 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: class_list

    2 class_list: class ';'
    3           | class_list class ';'

    4 class: CLASS TYPEID '{' feature_list '}' ';'
    5      | CLASS TYPEID INHERITS TYPEID '{' feature_list '}' ';'

    6 expr: INT_CONST
    7     | STR_CONST

    8 feature_list: /* empty */
    9             | feature ';'
   10             | feature_list feature

   11 feature: OBJECTID ':' TYPEID ASSIGN expr


Terminals, with rules where they appear

$end (0) 0
':' (58) 11
';' (59) 2 3 4 5 9
'{' (123) 4 5
'}' (125) 4 5
error (256)
CLASS (258) 4 5
ELSE (259)
FI (260)
IF (261)
IN (262)
INHERITS (263) 5
LET (264)
LOOP (265)
POOL (266)
THEN (267)
WHILE (268)
CASE (269)
ESAC (270)
OF (271)
DARROW (272)
NEW (273)
ISVOID (274)
STR_CONST (275) 7
INT_CONST (276) 6
BOOL_CONST (277)
TYPEID (278) 4 5 11
OBJECTID (279) 11
ASSIGN (280) 11
NOT (281)
LE (282)
ERROR (283)


Nonterminals, with rules where they appear

$accept (33)
    on left: 0
program (34)
    on left: 1, on right: 0
class_list (35)
    on left: 2 3, on right: 1 3
class (36)
    on left: 4 5, on right: 2 3
expr (37)
    on left: 6 7, on right: 11
feature_list (38)
    on left: 8 9 10, on right: 4 5 10
feature (39)
    on left: 11, on right: 9 10


state 0

    0 $accept: . program $end

    CLASS  shift, and go to state 1

    program     go to state 2
    class_list  go to state 3
    class       go to state 4


state 1

    4 class: CLASS . TYPEID '{' feature_list '}' ';'
    5      | CLASS . TYPEID INHERITS TYPEID '{' feature_list '}' ';'

    TYPEID  shift, and go to state 5


state 2

    0 $accept: program . $end

    $end  shift, and go to state 6


state 3

    1 program: class_list .
    3 class_list: class_list . class ';'

    CLASS  shift, and go to state 1

    $default  reduce using rule 1 (program)

    class  go to state 7


state 4

    2 class_list: class . ';'

    ';'  shift, and go to state 8


state 5

    4 class: CLASS TYPEID . '{' feature_list '}' ';'
    5      | CLASS TYPEID . INHERITS TYPEID '{' feature_list '}' ';'

    INHERITS  shift, and go to state 9
    '{'       shift, and go to state 10


state 6

    0 $accept: program $end .

    $default  accept


state 7

    3 class_list: class_list class . ';'

    ';'  shift, and go to state 11


state 8

    2 class_list: class ';' .

    $default  reduce using rule 2 (class_list)


state 9

    5 class: CLASS TYPEID INHERITS . TYPEID '{' feature_list '}' ';'

    TYPEID  shift, and go to state 12


state 10

    4 class: CLASS TYPEID '{' . feature_list '}' ';'

    OBJECTID  shift, and go to state 13

    OBJECTID  [reduce using rule 8 (feature_list)]
    $default  reduce using rule 8 (feature_list)

    feature_list  go to state 14
    feature       go to state 15


state 11

    3 class_list: class_list class ';' .

    $default  reduce using rule 3 (class_list)


state 12

    5 class: CLASS TYPEID INHERITS TYPEID . '{' feature_list '}' ';'

    '{'  shift, and go to state 16


state 13

   11 feature: OBJECTID . ':' TYPEID ASSIGN expr

    ':'  shift, and go to state 17


state 14

    4 class: CLASS TYPEID '{' feature_list . '}' ';'
   10 feature_list: feature_list . feature

    OBJECTID  shift, and go to state 13
    '}'       shift, and go to state 18

    feature  go to state 19


state 15

    9 feature_list: feature . ';'

    ';'  shift, and go to state 20


state 16

    5 class: CLASS TYPEID INHERITS TYPEID '{' . feature_list '}' ';'

    OBJECTID  shift, and go to state 13

    OBJECTID  [reduce using rule 8 (feature_list)]
    $default  reduce using rule 8 (feature_list)

    feature_list  go to state 21
    feature       go to state 15


state 17

   11 feature: OBJECTID ':' . TYPEID ASSIGN expr

    TYPEID  shift, and go to state 22


state 18

    4 class: CLASS TYPEID '{' feature_list '}' . ';'

    ';'  shift, and go to state 23


state 19

   10 feature_list: feature_list feature .

    $default  reduce using rule 10 (feature_list)


state 20

    9 feature_list: feature ';' .

    $default  reduce using rule 9 (feature_list)


state 21

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list . '}' ';'
   10 feature_list: feature_list . feature

    OBJECTID  shift, and go to state 13
    '}'       shift, and go to state 24

    feature  go to state 19


state 22

   11 feature: OBJECTID ':' TYPEID . ASSIGN expr

    ASSIGN  shift, and go to state 25


state 23

    4 class: CLASS TYPEID '{' feature_list '}' ';' .

    $default  reduce using rule 4 (class)


state 24

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list '}' . ';'

    ';'  shift, and go to state 26


state 25

   11 feature: OBJECTID ':' TYPEID ASSIGN . expr

    STR_CONST  shift, and go to state 27
    INT_CONST  shift, and go to state 28

    expr  go to state 29


state 26

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list '}' ';' .

    $default  reduce using rule 5 (class)


state 27

    7 expr: STR_CONST .

    $default  reduce using rule 7 (expr)


state 28

    6 expr: INT_CONST .

    $default  reduce using rule 6 (expr)


state 29

   11 feature: OBJECTID ':' TYPEID ASSIGN expr .

    $default  reduce using rule 11 (feature)
